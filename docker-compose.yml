
version: '3.5'

services:
  nginx:
    image: nginx
    restart: always
    volumes:
      - './nginx.conf:/etc/nginx/nginx.conf:z'
      - './config/container/letsencrypt:/etc/letsencrypt:z'
      - 'certbot_data:/var/www/certbot'
    ports:
      - ${HTTP_PORT}:80
      - ${HTTPS_PORT}:${HTTPS_PORT}
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"

  certbot:
    image: certbot/certbot
    restart: unless-stopped
    volumes:
      - './config/container/letsencrypt:/etc/letsencrypt'
      - 'certbot_data:/var/www/certbot'
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

  shinystudio:
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    depends_on:
      - influxdb
    volumes:
      - '/var/run/docker.sock:/var/run/docker.sock'
      - './config/container/img:/opt/shinyproxy/templates/grid-layout/assets/img:z'
      - "./application.yml:/opt/shinyproxy/application.yml:z"
    environment:
      - APPLICATION_LOGS_TO_STDOUT=false
      - SITE_NAME=${COMPOSE_PROJECT_NAME}
      - CONTENT_PATH=${CONTENT_PATH}
      #- USER=${USER}
      - USERID=${USERID}

  influxdb:
    image: influxdb
    restart: always
    volumes:
      - 'influxdb_data:/var/lib/influxdb'
    environment:
      - INFLUXDB_DB=shinyproxy_usagestats
      - INFLUXDB_REPORTING_DISABLED=true

volumes:
  influxdb_data:
  certbot_data:
  r_libraries:
  py_environment:
  pwsh_modules:
